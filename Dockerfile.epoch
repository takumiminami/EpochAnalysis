FROM ubuntu:24.04 

WORKDIR /data

# Install dependencies
RUN ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime\
    && apt update && apt upgrade -y 
RUN apt install -y curl ca-certificates gnupg \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash -   # Install node.js
RUN apt install -y vim git ffmpeg wget curl python-is-python3 python3-pip python3-dev python3-tk nodejs evince gcc build-essential openmpi-bin libopenmpi-dev python3-venv

# python packages
ENV PYTHONEXE=python3
RUN python3 -m venv /opt/venv 
ENV PATH="/opt/venv/bin:${PATH}"
RUN pip install --upgrade pip
RUN pip install ipython matplotlib numpy scipy notebook pandas natsort joblib tqdm numba tensorflow opencv-python 
 
# epoch
RUN cd /opt \
    && git clone --recursive https://github.com/Warwick-Plasma/epoch.git 
RUN cd /opt/epoch/epoch1d/src \
    && sed -i -e "s/string_length\ =\ 256/string_length\ =\ 100000/g" constants.F90 \ 
    && cd /opt/epoch/epoch1d \
    && make -j 32 DEFINE="-DPARTICLE_ID" COMPILER=gfortran
RUN cd /opt/epoch/epoch2d/src \
    && sed -i -e "s/string_length\ =\ 256/string_length\ =\ 100000/g" constants.F90 \ 
    && cd /opt/epoch/epoch2d \
    && make -j 32 DEFINE="-DPARTICLE_ID" COMPILER=gfortran
RUN cd /opt/epoch/epoch3d/src \
    && sed -i -e "s/string_length\ =\ 256/string_length\ =\ 100000/g" constants.F90 \ 
    && cd /opt/epoch/epoch3d \
    && make -j 32 DEFINE="-DPARTICLE_ID" COMPILER=gfortran
ENV PATH=/opt/epoch/epoch3d/bin:/opt/epoch/epoch2d/bin:/opt/epoch/epoch1d/bin:${PATH}

# sdfutils
RUN apt install -y pip 
RUN cd /opt/epoch/epoch2d \
    && make sdfutils

# vim-plug 
RUN mkdir ~/.vim && mkdir ~/.vim/autoload && cd ~/.vim/autoload \
    && wget https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim 
COPY bashrc-docker /root/.bash_aliases
COPY vimrc-docker /root/.vimrc
RUN vim +PlugInstall +qall
RUN echo "source ~/.bash_aliases" >> ~/.bashrc

